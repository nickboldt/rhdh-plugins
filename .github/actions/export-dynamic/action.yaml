name: Export to dynamic plugin archives
description: Export plugins to dynamic plugin package archives
inputs:
  plugins-file:
    description: file that contains a yaml dictionary of plugin relative paths to export as dynamic plugins, optionally specifying additional export-dynamic command line arguments.
    required: true

  destination:
    description: Folder that should receive all the targz archives.
    required: false
    default: dynamic-plugins-destination

  janus-cli-version:
    description: Version of the janus-idp/cli package.
    required: false
    default: ^1.7.10

  config-file-name:
    description: File name of the app-config files in which we expect to have the default configuration of a frontend plugin.
    required: false
    default: app-config.dynamic.yaml

outputs:
  errors:
    description: 'The generated random number'
    value: ${{ steps.run-export-dynamic.outputs.ERRORS }}    

runs:
  using: 'composite'
  steps:
    - name: Run ExportDynamic
      id: run-export-dynamic
      shell: bash
      env:
        NPM_CONFIG_ignore-scripts: 'true'
        YARN_ENABLE_IMMUTABLE_INSTALLS: 'false'
      run: |
        errors=''
        packDestination=${{ inputs.destination }}
        IFS=$'\n'
        for plugin in $(cat ${{ inputs.plugins-file }})
        do
          if [[ "$(echo $plugin | sed 's/ *//')" == "" ]]
          then
            echo "Skip empty line"
            continue
          fi
          if [[ "$(echo $plugin | sed 's/^#.*//')" == "" ]]
          then
            echo "Skip commented line"
            continue
          fi
          pluginPath=$(echo $plugin | sed 's/^\(^[^:]*\): *\(.*\)$/\1/')
          args=$(echo $plugin | sed 's/^\(^[^:]*\): *\(.*\)$/\2/')
          pushd $pluginPath > /dev/null
          if [[ "$(grep -e '"role" *: *"frontend-plugin' package.json)" != "" ]]
          then
            echo ========== Exporting frontend plugin $pluginPath ==========
            sed -i 's/\(^ *\)"dist"\( *\)$/\1"dist-scalprum", "dist"\2/' package.json
            set +e
            echo "$args" | xargs npx --yes @janus-idp/cli@${{ inputs.janus-cli-version }} package export-dynamic-plugin
            if [ $? -ne 0 ]
            then
              errors="${errors}\n${pluginPath}"
              set -e
              popd > /dev/null
              continue
            fi
            json=$(npm pack . --pack-destination $packDestination --json)
            if [ $? -ne 0 ]
            then
              errors="${errors}\n${pluginPath}"
              set -e
              popd > /dev/null
              continue
            fi
            set -e
          else
            echo ========== Exporting backend plugin $pluginPath ==========
            set +e
            echo "$args" | xargs npx --yes @janus-idp/cli@${{ inputs.janus-cli-version }} package export-dynamic-plugin --embed-as-dependencies 
            if [ $? -ne 0 ]
            then
              errors="${errors}\n${pluginPath}"
              set -e
              popd > /dev/null
              continue
            fi
            json=$(npm pack ./dist-dynamic --pack-destination $packDestination --json)
            if [ $? -ne 0 ]
            then
              errors="${errors}\n${pluginPath}"
              set -e
              popd > /dev/null
              continue
            fi
            set -e
          fi
          filename=$(echo "$json" | jq -r '.[0].filename')
          integrity=$(echo "$json" | jq -r '.[0].integrity')
          echo "$integrity" > $packDestination/${filename}.integrity
          optionalConfigFile="$(dirname ${{ inputs.plugins-file }})/${pluginPath}/${{ inputs.config-file-name }}"
          if [ -f "${optionalConfigFile}" ]
          then
            cp "${optionalConfigFile}" "$packDestination/${filename}.${{ inputs.config-file-name }}"
          fi
          popd > /dev/null
        done
        echo "Plugins with failed exports: $errors"
        echo "ERRORS=$errors" >> $GITHUB_OUTPUT
